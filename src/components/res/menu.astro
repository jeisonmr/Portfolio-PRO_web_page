---
import Menu from "../Json/Menu";
import "../../Styles/root.css";
const IconClose = "/public/Resource/img/logos/close.svg";
const IconOpen = "/public/Resource/img/logos/open.svg";

interface Props {
  btnTitle: string;
}
const { btnTitle } = Astro.props;
---

<!-- Mapeo de items del menu -->
<div class="menuBarContainer">
  <ul class="menuBar">
    {
      Menu.map((i) => {
        return (
          <li class="menuItemsBtn">
              <a id="menuItems" class="items" href={i.url}>
                {i.item}
              </a>
          </li>
        );
      })
    }
  </ul>

  <!-- <p class="separator">|</p> -->

  <!-- <button class="btnLeng">{btnTitle}</button> -->
</div>
<button id="checkBtn" class="btnMenu" value="0">
  <img src={IconClose} id="closeMenu" class="" alt="menu" />
  <img src={IconOpen} id="openMenu" class="inactive" alt="menu" />
</button>

<script>
  // Btn Lenguage
  const menuBtn = document.querySelector(".btnMenu");
  // Btn Menu
  const openMenu = document.getElementById("openMenu");
  const closeMenu = document.getElementById("closeMenu");
  const menu = document.querySelector(".menuBarContainer");
  const items = document.querySelectorAll(".items");

  const toggleMenu = (value) => {
    if (value == 0) {
      closeMenu.classList.add("inactive");
      openMenu.classList.remove("inactive");
      menu.style.right = "0";
      menuBtn.value = 1;
    } else if (value == 1) {
      closeMenu.classList.remove("inactive");
      openMenu.classList.add("inactive");
      menu.style.right = "-32rem";
      menuBtn.value = 0;
    }
  };
  // Boton del menu desplegable
  menuBtn.addEventListener("click", () => {
    toggleMenu(menuBtn.value);
  });
  // Items del menu
  items.forEach(i =>{
    i.addEventListener("click", () => {
      toggleMenu(menuBtn.value);
    })
  });
</script>

<style>
  .menuBarContainer {
    display: flex;
    flex-direction: row;
    /* animation: listMenu 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both; */
    animation-delay: .8s;
  }
  .menuBar {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    color: var(--cl-1);
    font-family: var(--font-3);
    gap: 20px;
  }
  .menuBar > a {
    display: flex;
    align-items: right;
    text-decoration: none;
    list-style: none;
  }
  .menuBar a {
    position: relative;
  }
  #menuItems {
    color: var(--cl-2);
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--cl-1)
  }
  #menuItems:hover,
  a li:active {
    color: var(--cl-7);
  }
  a > li.active {
    color: var(--cl-7);
  }
  #menuItems:hover::before {
    opacity: 1;
    transform: none;
    visibility: visible;
  }
  #menuItems::before {
    position: absolute;
    content: "";
    bottom: -10px;
    left: 0;
    height: 3px;
    width: 100%;
    background: var(--bg-5);
    opacity: 0;
    visibility: hidden;
    transform: translateY(5px);
    transition: all 0.2s ease;
  }
  .menuItemsBtn{
    padding: 7.5px 15px !important;
    background-color: var(--bg-8);
    border-radius: 30px;
  }
  .separator {
    display: flex;
    align-items: center;
    margin: 0 20px !important;
  }
  .btnLeng {
    width: 60px;
    height: 20px;
    font-family: var(--font-3);
    font-weight: 900;
    color: var(--cl-3);
    background-color: var(--bg-5);
    border-radius: 10px;
    border: none;
    transition: 0.5s;
  }
  .btnLeng:hover {
    background: #ffbf00;
    color: var(--cl-1);
    transition: 0.5s;
  }
  .btnMenu {
    display: none;
  }
  .separator {
    color: var(--cl-2);
  }
  @keyframes listMenu {
  0% {transform: translateX(500px);}
  100% {transform: translateX(0px);}
}
  /* Media Queries */
  @media screen and (max-width: 425px) {
    .menuBar {
      display: flex;
      flex-direction: column;
      position: relative;
      z-index: 200;
    }
    .menuItems {
      text-align: right;
      color: var(--cl-1);
      z-index: 200;
    }
    .menuItemsBtn{
    background-color: transparent;
  }
    .menuBarContainer {
      width: 100vw;
      height: 180px;
      position: fixed;
      background-color: #0000006c;
      top: 3.7rem;
      right: -32rem;
      display: flex;
      flex-direction: column;
      gap: 20px;
      justify-content: right;
      align-items: center;
      padding: 10px 0 !important;
      transition-duration: 0.4s;
      z-index: 10 !important;
    }
    .separator {
      display: none;
    }
    .inactive {
      display: none;
    }
    .btnMenu {
      border: none;
      width: 30px;
      height: 30px;
      display: flex;
      background-color: transparent;
    }
    #checkBtn:checked ~ ul {
      right: 0 !important;
      transition: all 0.5s;
    }
  }
</style>
