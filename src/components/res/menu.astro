---
import Menu from "../Json/Menu";
import "../../Styles/root.css";
import IconClose from "../../Resource/img/logos/close.svg";
import IconOpen from "../../Resource/img/logos/open.svg";

interface Props {
  btnTitle: string;
}
const { btnTitle } = Astro.props;
---

<!-- Mapeo de items del menu -->
<div class="menuBarContainer inactive">
  <ul class="menuBar">
    {
      Menu.map((i) => {
        return (
          <a href={i.url}>
            <li class="menuItems">{i.item}</li>
          </a>
        );
      })
    }
  </ul>

  <p class="separator">|</p>

  <button class="btnLeng">{btnTitle}</button>
</div>
<button class="btnMenu" value="1">
  <img src={IconClose} id="hbClose" class="active" alt="menu" />
  <img src={IconOpen} id="hbOpen" class="inactive" alt="menu" />
</button>

<script>
  const button = document.querySelector(".btnMenu");
  const open = document.getElementById("hbOpen");
  const close = document.getElementById("hbClose");
  const menu = document.querySelector(".menuBarContainer");

  button.addEventListener("click", () => {
    if (button.value == 1) {
      close.classList.remove("active");
      close.classList.add("inactive");
      open.classList.remove("inactive");
      open.classList.add("active");
      menu.classList.remove("inactive");
      menu.classList.add("active");
      button.value = 0;
    } else if (button.value == 0) {
      close.classList.remove("inactive");
      close.classList.add("active");
      open.classList.remove("active");
      open.classList.add("inactive");
      menu.classList.remove("active");
      menu.classList.add("inactive");
      button.value = 1;
    }
  });
</script>

<style>
  .menuBarContainer {
    display: flex;
    flex-direction: row;
  }
  .menuBar {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
    color: var(--cl-1);
    font-family: var(--font-3);
    gap: 20px;
  }
  .menuBar > a {
    display: flex;
    align-items: right;
    text-decoration: none;
    list-style: none;
  }
  .menuBar a {
    position: relative;
  }
  .menuItems {
    color: var(--cl-2);
  }
  .menuItems:hover,
  .menuItems:focus {
    color: var(--cl-1);
  }
  .menuItems:hover::before {
    opacity: 1;
    transform: none;
    visibility: visible;
  }
  .menuItems::before {
    position: absolute;
    content: "";
    bottom: -8px;
    left: 0;
    height: 3px;
    width: 100%;
    background: var(--bg-5);
    opacity: 0;
    visibility: hidden;
    transform: translateY(5px);
    transition: all 0.2s ease;
  }
  .separator {
    display: flex;
    align-items: center;
    margin: 0 20px !important;
  }
  .btnLeng {
    width: 60px;
    height: 20px;
    font-family: var(--font-3);
    font-weight: 900;
    color: var(--cl-3);
    background-color: var(--bg-5);
    border-radius: 10px;
    border: none;
    transition: .5s;
  }
  .btnLeng:hover {
    /* background-color: var(--bg-6); */
    /* background: #991C36; */
    background: #FFBF00;
    color: var(--cl-1);
    transition: .5s;
  }
  .btnMenu {
    display: none;
  }

  /* Media Queries */
  @media screen and (max-width: 576px) {
    .menuBar {
      display: flex;
      flex-direction: column;
      position: relative;
      z-index: 190;
    }
    .menuItems {
      text-align: right;
      color: var(--cl-1);
      z-index: 200;
    }
    .menuBarContainer {
      width: 150px;
      height: 180px;
      display: flex;
      flex-direction: column;
      gap: 20px;
      position: absolute;
      top: 100px;
      right: 1px;
      justify-content: right;
      align-items: center;
    }
    .separator {
      display: none;
    }
    .active {
      display: flex;
    }
    .inactive {
      display: none;
    }
    .btnMenu {
      border: none;
      width: 100%;
      height: 100%;
      display: flex;
      background-color: var(--bg-2);
    }
  }
</style>
